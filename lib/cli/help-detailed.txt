Usage: tl [options...] [--] [file globs...]

Options:

-h, --help
    Show a simpler help prompt.

-H, --help-detailed
    Show this help prompt.

--cwd [directory]
    Set the current working directory for Thallium to use. By default, it's
    inherited.

-c [file], --config [file]
    Use a custom config file. By default, this is inferred from the first file
    glob, for example `test/.tl.coffee` from a glob of
    `test/**/*.coffee`. If the extension does not match anything, this will
    first try to infer it from the glob before giving up.

    If this option is passed multiple times, the last one takes precedence.

-r [module], --require [module]
    Require a module before loading the config. This may default-export a
    thenable as well, to delay execution.

-r [ext:module], --require [ext:module]
    Register an extension with that module (so Thallium knows it's a register
    hook). Usually you don't even need to register the extension yourself, but
    it's there for things like running Babel with a different set of plugins
    than what's specified in your `.babelrc`. Also, if you're either using a
    language not understood by node-interpret, you'll need to use this.

    Note: you may add an optional preceding dot before `ext` (i.e. `.ext`), and
    it's considered equivalent.

--opts [opts]
    Use a custom opts file instead of trying to find a `.tl.opts` somewhere.
    It's there in case you need to keep your options file somewhere else,
    and/or under an alternative name.

--
    Stop parsing options past this point. Treat any further argument as a file.

--color
    Force-enable terminal colors for core reporters, regardless of the
    applicable terminal/shell settings or support.

--no-color
    Force-disable terminal colors for core reporters, so that even if the
    terminal does support colors, only raw Unicode is printed.

--no-color
    Force-disable terminal colors for core reporters, so that even if the
    terminal does support colors, only raw Unicode is printed.

--env [key=value], -e [key=value]
    Set an environment variable, or omit `value` to unset it. This is useful for
    setting relevant environment variables without resorting to either ugly
    platform-specific code, additional dependencies, or boilerplate scripts.

--respawn-as [file]
    Respawn using a different binary than the one used to execute initially, so
    you can do things like `--respawn-as electron` without having to invoke
    Electron directly, or to respawn with a different Node version than that
    used to start the CLI. This implies `--respawn`, and causes `--no-respawn`
    to have no effect.

All options are optional, and all unknown options are passed directly to Node.
If no file globs are given, `test/**/*.{extname of config found}` is used as
the default glob, with `test/.config.{extname}` being the default config, where
the `extname` is inferred.

This tries to be sane by attempting to infer the general intent and preferring
code over config in the CLI, so it's much easier to set up and run.
